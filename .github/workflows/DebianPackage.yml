name: Debian Package Creation and Publication

on: [push]
# on:
#   push:
#     tags:
#       - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        -
            name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
        -
            name: Setup Go
            uses: actions/setup-go@v5
            with:
                go-version: '1.23.x'
        -
            id: go-releaser
            name: Run GoReleaser
            uses: goreleaser/goreleaser-action@v6
            with:
                # either 'goreleaser' (default) or 'goreleaser-pro'
                distribution: goreleaser
                # 'latest', 'nightly', or a semver
                version: '~> v2'
                #args: release --rm-dist --clean --snapshot
                args: release -f .goreleaser.yml --clean --snapshot
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
                # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        -
            name: Install jq
            uses: awalsh128/cache-apt-pkgs-action@latest
            with:
              packages: jq
        -
            name: Show artifacts
            run: echo '${{ steps.go-releaser.outputs.artifacts }}' | jq
        -
            id: prepare-deb
            name: Prepare package content
            run: |
                # main program
                mkdir -p .debpkg/usr/bin
                cp $(echo '${{ steps.go-releaser.outputs.artifacts }}' | jq -r '.[] | select(.name == "myhome") | .path') .debpkg/usr/bin/myhome

                # systemd script as a shared file
                mkdir -p .debpkg/usr/share/myhome
                cp linux/debian/myhome.service .debpkg/usr/share/myhome/myhome.service

                # create DEBIAN directory if you want to add other pre/post scripts
                mkdir -p .debpkg/DEBIAN
                cp linux/debian/postinst.sh .debpkg/DEBIAN/postinst
                chmod +x .debpkg/DEBIAN/postinst
        -
            name: Get previous tag
            id: previoustag
            uses: 'WyriHaximus/github-action-get-previous-tag@v1'
            with:
                fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        -
            name: Get next patchlevel version
            id: semver
            uses: 'WyriHaximus/github-action-next-semvers@v1'
            with:
                version: ${{ steps.previoustag.outputs.tag }}
        -
            id: build-deb
            name: Build Debian Package
            uses: jiro4989/build-deb-action@v4
            with:
                package: myhome
                package_root: .debpkg
                maintainer: Francois-Xavier 'FiX' KOWALSKI <fix.kowalski@gmail.com>
                # https://www.debian.org/doc/debian-policy/ch-controlfields.html#version
                #debian_revision: ${{ github.run_number }}
                # # Next major
                # version: ${{ steps.semver.outputs.major }}
                # # Next minor
                # version: ${{ steps.semver.outputs.minor }}
                # Next patchlevel
                version: ${{ steps.semver.outputs.patch }}
                arch: 'arm64' # optional
                depends: 'libc6 (>= 2.2.1), systemd' # optional
                desc: 'MyHome Automation.' # optional
                homepage: 'https://github.com/asnowfix/home-automation' # optional
        -
            name: Check files
            run: ls -l ${{ steps.build-deb.outputs.file_name }}
        -
            name: version
            run: echo "::set-output name=version::$(git describe)"
            id: version
        -
            name: Get previous tag
            id: previoustag
            uses: 'WyriHaximus/github-action-get-previous-tag@v1'
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        -
            name: Get next minor version
            id: semver
            uses: 'WyriHaximus/github-action-next-semvers@v1'
            with:
              version: ${{ steps.previoustag.outputs.tag }}
        -
            name: Create release
            id: create_release_id
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ steps.semver.outputs.patch }}
              release_name: Release ${{ steps.semver.outputs.patch }}
              #tag_name: ${{ github.ref }}
              #release_name: ${{ steps.version.outputs.version }}
              body_path: CHANGELOG.md
              draft: false
              prerelease: true
