name: Debian Package Creation and Publication

on: [push]
# on:
#   push:
#     tags:
#       - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        -
            name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
        -
            name: Setup Go
            uses: actions/setup-go@v5
            with:
                go-version: '1.23.x'
        -
            id: go-releaser
            name: Run GoReleaser
            uses: goreleaser/goreleaser-action@v6
            with:
                # either 'goreleaser' (default) or 'goreleaser-pro'
                distribution: goreleaser
                # 'latest', 'nightly', or a semver
                version: '~> v2'
                #args: release --rm-dist --clean --snapshot
                args: release -f .goreleaser.yml --clean --snapshot
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
                # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        -
            name: Check files
            run: ls -lR dist
        -
            id: prepare-deb
            name: Prepare package content
            run: |
                # Main program
                mkdir -p .debpkg/usr/bin
                cp myhome/myhome .debpkg/usr/bin/myhome

                # create DEBIAN directory if you want to add other pre/post scripts
                mkdir -p .debpkg/DEBIAN
                cp linux/debian/postinst.sh .debpkg/DEBIAN/postinst
                chmod +x .debpkg/DEBIAN/postinst
        -
            id: build-deb
            name: Build Debian Package
            uses: jiro4989/build-deb-action@v4
            with:
                package: myhome
                package_root: .debpkg
                maintainer: Francois-Xavier 'FiX' KOWALSKI <fix.kowalski@gmail.com>
                version: ${{ github.ref }} # refs/tags/v*.*.*
                arch: 'arm64' # optional
                depends: 'libc6 (>= 2.2.1), systemd' # optional
                desc: 'MyHome Automation.' # optional
                homepage: 'https://github.com/asnowfix/home-automation' # optional
        -
            name: Check files
            run: ls -lR ${{ steps.build-deb.outputs.file_name }}
        -
            run: |
                gh release create v1.2.3 release.tar.xz
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            shell: bash
            name: Creates a release in GitHub and uploads attachments
